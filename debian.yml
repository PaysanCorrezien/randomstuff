---
- hosts: localhost
  vars:
    githubuser: "paysancorrezien"

  tasks:
    - name: Install required packages
      become: yes
      apt:
        pkg:
        - curl
        - git
        - python3
        - python3-pip
        - python3-setuptools
        - xclip
        - zathura
        - wget
        - autorandr
        - jq
        - flameshot
        - fzf
        - zoxide
        - bat
        - ripgrep
        - tmux
        - fd-find
        - exa
        - neofetch
        - zsh
        update_cache: yes

    - name: Install python packages
      command:
        cmd: pip3 install -U pip

    - name: Change shell to zsh
      become: yes
      shell: chsh -s /usr/bin/zsh "{{ ansible_env.USER }}" 
      args:
        executable: /bin/bash

    - name: Install Zap for Zsh
      shell: 
        cmd: zsh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/release-v1/install.zsh)
      become_user: "{{ ansible_env.USER }}"
      args:
        executable: /bin/bash

    - name: Install chezmoi
      become: yes
      shell:
        cmd: |
          sh -c "$(curl -fsLS git.io/chezmoi)"
          mv ./bin/chezmoi /usr/local/bin/

    - name: Clone the dotfiles repository using HTTPS
      git:
        repo: 'https://github.com/{{ githubuser }}/dotfiles.git'
        dest: "{{ ansible_env.HOME }}/.local/share/chezmoi"
        version: "main"
        force: yes

    - name: Ensure chezmoi.toml exists with default values
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.config/chezmoi/chezmoi.toml"
        content: |
          [data]
          git = { name = "Default Name", email = "default@email.com", gpg = "DefaultKey" }
        force: no

    - name: Initialize chezmoi
      command: chezmoi init --apply {{ githubuser }}

    - name: Update chezmoi
      command: chezmoi update

    - name: Install NVM
      shell:
        cmd: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      become_user: "{{ ansible_env.USER }}"
      args:
        executable: /bin/bash

    - name: Wait for NVM to install
      wait_for:
        path: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
        state: present

    - name: Install Node.js
      shell: 
        cmd: |
          export NVM_DIR="{{ ansible_env.HOME }}/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install node
      become_user: "{{ ansible_env.USER }}"
      args:
        executable: /bin/bash

    - name: Install Fira Code Nerd Font
      shell:
        cmd: |
          fonts_dir="{{ ansible_env.HOME }}/.local/share/fonts"
          if [ ! -d "${fonts_dir}" ]; then
              mkdir -p "${fonts_dir}"
          fi
          version=6.2
          zip=Fira_Code_v${version}.zip
          curl --fail --location --show-error https://github.com/tonsky/FiraCode/releases/download/${version}/${zip} --output ${zip}
          unzip -o -q -d ${fonts_dir} ${zip}
          rm ${zip}
          fc-cache -f
      become_user: "{{ ansible_env.USER }}"
      args:
        executable: /bin/bash

    - name: Allow ansible user to execute sudo without password
      become: yes
      lineinfile:
        dest: /etc/sudoers
        line: '{{ ansible_env.USER }} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
